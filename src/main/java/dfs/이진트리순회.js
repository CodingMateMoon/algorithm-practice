/*
        1
     2     3
  4    5  6  7
전위순회 출력 : 1 2 4 5 3 6 7 (부모 왼쪽 오른쪽)
중위순회 출력 : 4 2 5 1 6 3 7 (왼쪽 부모 오른쪽)
후위순회 출력 : 4 5 2 6 7 3 1 (왼쪽 오른쪽 부모)
 */


function dfs(v) {

    if (v > 7) {
        return;
    }
    //중위순회
    // dfs(v * 2);
    // console.log(v);
    // dfs(v * 2 + 1);

    // 전위순회
    console.log(v);
    dfs(v * 2);
    dfs(v * 2 + 1);


    // 후위순회
    // dfs(v * 2);
    // dfs(v * 2 + 1);
    // console.log(v);


}

dfs(1);


/*
중위순회를 기준으로 할 때 왼쪽 자식, 부모, 오른쪽 자식 순으로 탐색합니다. 루트노드를 레벨1, 값1이라고할 때 레벨2 자식노드는 1 *2, 1*2 +1이고
레벨3 자식노드는 2*2 = 4, 2*2+1=5, 3*2 = 6, 3*2 + 1 = 7 입니다. 탐색을 값이 1인 루트노드에서 시작할 때 (dfs1) 중위순회의 경우 우선 왼쪽 자식이 있으므로
dfs2로 가고 dfs2는 다시 왼쪽 자식이 있으므로 dfs4로 갑니다. dfs4는 왼쪽 자식이 없으므로 자식 탐색을 종료하고 2로 돌아옵니다. 2 노드는 오른쪽 자식이 있으므로 dfs5를 호출합니다.
dfs5는 dfs10, dfs11로 가보지만 노드의 최대값인 7을 초과하므로 자식 노드가 없는 것으로 판단합니다.
* */